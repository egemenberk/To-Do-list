swagger: "2.0"
#openapi: 3.0.0
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger REST Article

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  basicAuth:
    type: basic
    x-basicInfoFunc: auth.basic_auth

security:
  - basicAuth: []

responses:
  401:
    $ref": '#/responses/UnauthorizedError'

responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string

paths:
  /todo:
    get:
      operationId: views.get_todo_items
      tags:
        - Todo
      summary: Get Todo objects
      description: Get list of todo or single one
      responses:
        200:
          description: Get Items
          schema:
            $ref: '#/definitions/TodoGet'

  /todo-list:
    post:
      tags:
        - TodoList
      operationId: views.create_todo_list
      summary: Create TodoList object
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/TodoListCreate'
        400:
          description: Bad Request

  /todo:
    post:
      tags:
        - Todo
      operationId: views.create_todo
      summary: Create Todo object
      parameters:
        - name: todo
          in: body
          description: Todo to create
          required: true
          schema:
            $ref: '#/definitions/TodoCreate'
      responses:
        201:
          description: Created
        400:
          description: Bad Request
  /todo/{todo_id}:
    delete:
      tags:
        - Todo
      operationId: views.delete_todo
      summary: Delete Todo object
      parameters:
        - name: todo_id
          type: integer
          required: true
          in: path
          description: Id of the Todo to delete
      responses:
        204:
          description: Deleted
        404:
          description: Not Found

  /todo/{todo_id}/complete:
    post:
      tags:
        - Todo
      operationId: views.complete_todo
      summary: Complete Todo object
      parameters:
        - name: todo_id
          type: integer
          required: true
          in: path
          description: Id of the Todo to complete
      responses:
        204:
          description: Updated
        404:
          description: Not Found
  /user:
    post:
      tags:
        - User
      operationId: views.create_user
      summary: Create User object
      security: []
      parameters:
        - name: user
          in: body
          description: User to create
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: Created
        400:
          description: Bad Request

definitions:
  TodoGet:
    type: array
    items:
      properties:
        id:
          type: integer
        text:
          type: string
        completed:
          type: boolean
  TodoCreate:
    type: object
    properties:
      text:
        type: string
      completed:
        type: boolean
    required:
      - text
  TodoListCreate:
    type: object
    properties:
      id:
        type: integer
  User:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
      - username
      - password
